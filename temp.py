import streamlit as st
from google import genai
from google.genai import types
import pathlib
import httpx
from tempfile import NamedTemporaryFile

# --- HARDCODE YOUR API KEY HERE ---
GOOGLE_API_KEY = "AIzaSyAYlgueM3h9Q6z9zJ308keNIj_QzK6e1hY"  # ЁЯФ┤ Replace this with your real key

# --- Initialize Gemini client ---
client = genai.Client(api_key=GOOGLE_API_KEY)

st.title("ЁЯУЪ Hindi Book Chat with Gemini 2.0 Flash")

# --- Upload PDF or provide URL ---
uploaded_file = st.file_uploader("рдЕрдкрдирд╛ рд╣рд┐рдВрджреА PDF рдмреБрдХ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ", type=["pdf"])
pdf_url = st.text_input("рдпрд╛ PDF рдХрд╛ рд▓рд┐рдВрдХ рдбрд╛рд▓реЗрдВ:")

file_path = None
if uploaded_file is not None:
    with NamedTemporaryFile(delete=False, suffix=".pdf") as tmp:
        tmp.write(uploaded_file.read())
        file_path = pathlib.Path(tmp.name)
elif pdf_url:
    try:
        file_path = pathlib.Path("downloaded_book.pdf")
        file_path.write_bytes(httpx.get(pdf_url).content)
    except Exception as e:
        st.error(f"PDF рдбрд╛рдЙрдирд▓реЛрдб рдирд╣реАрдВ рд╣реЛ рд╕рдХрд╛: {e}")
        st.stop()

if file_path is not None:
    st.success(f"ЁЯУД PDF рддреИрдпрд╛рд░: {file_path.name}")

    if 'uploaded_file_id' not in st.session_state:
        with st.spinner("Gemini рдХреЛ PDF рднреЗрдЬрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ..."):
            uploaded_file_obj = client.files.upload(file=file_path)
            st.session_state.uploaded_file_id = uploaded_file_obj
            st.success("тЬЕ PDF рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЕрдкрд▓реЛрдб рд╣реБрдЖ!")

    # --- Set creativity level ---
    temperature = st.slider("Creativity (temperature)", 0.0, 1.0, 0.5, 0.05)

    # --- User prompt in Hindi ---
    prompt = st.text_area("рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВ (рд╣рд┐рдВрджреА рдореЗрдВ)", height=100)

    if st.button("рдЙрддреНрддрд░ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ") and prompt.strip():
        config = types.GenerateContentConfig(
            temperature=temperature,
            top_k=40,
            top_p=1.0,
            max_output_tokens=2048
        )

        with st.spinner("рдЙрддреНрддрд░ рддреИрдпрд╛рд░ рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ..."):
            response = client.models.generate_content(
                model="gemini-2.0-flash",
                config=config,
                contents=[st.session_state.uploaded_file_id, prompt]
            )

        st.markdown("### ЁЯУШ Gemini рдХрд╛ рдЙрддреНрддрд░:")
        st.markdown(response.text)
else:
    st.info("рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ рдПрдХ PDF рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ рдпрд╛ рд▓рд┐рдВрдХ рдбрд╛рд▓реЗрдВред")
